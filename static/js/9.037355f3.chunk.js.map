{"version":3,"sources":["views/Home/components/CompositeImage.tsx","views/Home/components/Hero.tsx","views/Home/components/SalesSection/data.ts","views/Home/components/MetricsSection/index.tsx","hooks/api.ts","views/Home/components/PurpleWordHeading.tsx","views/Home/components/SalesSection/index.tsx","views/Home/components/FarmsPoolsRow/RowHeading.tsx","views/Home/components/FarmsPoolsRow/index.tsx","views/Home/components/SunburstSvg.tsx","views/Home/components/Footer.tsx","views/Home/components/CakeDataRow.tsx","views/Home/components/WedgeSvgs.tsx","views/Home/hooks/useFarmsWithBalance.tsx","views/Home/components/UserBanner/HarvestCard.tsx","views/Home/components/UserBanner/EarningsText.tsx","views/Home/components/UserBanner/UserDetail.tsx","views/Home/components/UserBanner/index.tsx","views/Home/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/ProfileAvatarWithTeam.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["Resolution","Hero","t","useTranslation","account","useWeb3React","position","flexDirection","alignItems","justifyContent","id","flex","scale","color","mb","ConnectWalletButton","mr","href","variant","swapSectionData","headingText","bodyText","reverse","primaryButton","to","text","external","secondaryButton","images","path","attributes","earnSectionData","cakeSectionData","Stats","data","useState","setData","useEffect","a","fetch","response","json","responseData","console","error","fetchData","useGetStats","tvlString","useTheme","theme","formatLocalisedCompactNumber","tvl","split","entrusting","inFunds","textAlign","flexWrap","display","height","width","mt","bold","floatingAnim","x","y","keyframes","Wrapper","styled","Box","maxHeight","ImageWrapper","img","getImageUrl","base","imageSrc","resolution","CompositeImage","map","image","src","srcSet","MD","LG","alt","PurpleWordHeading","props","firstWord","remainingWords","slice","join","style","colors","secondary","SalesSection","headingTranslatedText","bodyTranslatedText","ml","alignSelf","fontSize","RowHeading","FarmsPoolsRow","showFarms","setShowFarms","observerRef","useIntersectionObserver","timer","useRef","startTimer","useCallback","current","setInterval","prev","ref","onClick","clearInterval","SunburstSvg","viewBox","filter","d","fill","fillOpacity","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","stdDeviation","cx","cy","r","gradientUnits","gradientTransform","offset","stopColor","stopOpacity","BgWrapper","div","StyledSunburst","mediaQueries","xl","Flex","Footer","Container","md","StyledColumn","noMobileBorder","inputSecondary","sm","Grid","CakeDataRow","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","tokens","cake","address","cakeSupply","Balance","decimals","lineHeight","value","my","cakeEmissions","OuterWedgeWrapper","InnerWedgeWrapper","top","WedgeTopLeft","preserveAspectRatio","WedgeTopRight","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","fastRefresh","useRefresh","calls","farmsConfig","farm","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","farmsWithBalances","balanceType","gt","totalEarned","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","toNumber","fetchBalances","StyledCard","Card","HarvestCard","pendingTx","setPendingTx","useToast","toastSuccess","toastError","farmEarningsSum","masterChefContract","useMasterchef","cakePriceBusd","usePriceCakeBusd","earningsBusd","multipliedBy","numTotalToCollect","length","numFarmsToCollect","hasCakePoolToCollect","toString","count","earningsText","getEarningsText","preText","toCollectText","harvestAllFarms","farmWithBalance","harvestFarm","symbol","isNaN","prefix","isLoading","endIcon","spin","disabled","Desktop","Mobile","Sticker","invertedContrast","radii","circle","card","boxShadow","StyledNoProfileAvatarIcon","NoProfileAvatarIcon","UserDetail","useProfile","profile","truncatedAddress","truncateHash","ProfileAvatarWithTeam","userName","username","isDark","UserBanner","p","StyledHeroSection","PageSection","UserBannerWrapper","lg","Home","HomeSectionContainerStyles","margin","maxWidth","Page","innerProps","background","hasCurvedDivider","MetricsSection","gradients","cardHeader","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","TeamAvatar","AvatarWrapper","bg","AvatarInactive","nft","isActive","team","sharedStyles","clipPath","clipFill","css","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","clipPathUnits","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","children","svgFill","concaveDivider","containerProps"],"mappings":"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","file":"static/js/9.037355f3.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst floatingAnim = (x: string, y: string) => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(${x}, ${y});\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }  \r\n`\r\n\r\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\r\n  position: relative;\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n\r\n  & :nth-child(2) {\r\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n\r\n  & :nth-child(5) {\r\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\r\n    animation-delay: 0s;\r\n  }\r\n`\r\n// eslint-disable-next-line\r\nconst DummyImg = styled.img<{ maxHeight: string }>`\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n  visibility: hidden;\r\n`\r\n\r\nconst ImageWrapper = styled(Box)`\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nenum Resolution {\r\n  MD = '1.5x',\r\n  LG = '2x',\r\n}\r\ninterface ImageAttributes {\r\n  src: string\r\n  alt: string\r\n}\r\n\r\nexport interface CompositeImageProps {\r\n  path: string\r\n  attributes: ImageAttributes[]\r\n}\r\n\r\ninterface ComponentProps extends CompositeImageProps {\r\n  animate?: boolean\r\n  maxHeight?: string\r\n}\r\n\r\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution): string =>\r\n  `${base}${imageSrc}${resolution ? `@${resolution}.png` : '.png'}`\r\n\r\nexport const getSrcSet = (base: string, imageSrc: string) => {\r\n  return `${getImageUrl(base, imageSrc)} 512w, \r\n  ${getImageUrl(base, imageSrc, Resolution.MD)} 768w, \r\n  ${getImageUrl(base, imageSrc, Resolution.LG)} 1024w,`\r\n}\r\n\r\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\r\n  return (\r\n    <Wrapper maxHeight={maxHeight}>\r\n      {attributes.map((image) => (\r\n        <ImageWrapper key={image.src}>\r\n          <img src={getImageUrl(path, image.src)} srcSet={getSrcSet(path, image.src)} alt={image.alt} />\r\n        </ImageWrapper>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CompositeImage\r\n","import React from 'react'\r\n\r\nimport { Flex, Heading, Link, Button } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\n // eslint-disable-next-line\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  // eslint-disable-next-line\r\n  const { account } = useWeb3React()\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n      <Flex\r\n        position=\"relative\"\r\n        flexDirection={['column-reverse', null, null, 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n        id=\"homepage-hero\"\r\n      >\r\n        <Flex flex=\"1\" flexDirection=\"column\">\r\n          <Heading scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n            {t('BRISESWAP ( BSwap )')}\r\n          </Heading>\r\n          <Heading scale=\"md\" mb=\"24px\">\r\n            {t('Trade, earn, and win crypto on the most popular decentralized platform in the galaxy.')}\r\n          </Heading>\r\n          <Flex>\r\n            {!account && <ConnectWalletButton mr=\"8px\" />}\r\n            <Link mr=\"16px\" href=\"/swap\">\r\n              <Button variant={!account ? 'secondary' : 'primary'}>{t('Trade Now')}</Button>\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        \r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import { SalesSectionProps } from '.'\r\n\r\nexport const swapSectionData: SalesSectionProps = {\r\n  headingText: 'Trade anything. No registration, no hassle.',\r\n  bodyText: 'Trade any token on Bigert Chain in seconds, just by connecting your BRISE wallet.',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap',\r\n    text: 'Trade Now',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://BrisePad.co/',\r\n    text: 'Visit BrisePad',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/trade/',\r\n    attributes: [\r\n      \r\n   \r\n    ],\r\n  },\r\n}\r\n\r\nexport const earnSectionData: SalesSectionProps = {\r\n  headingText: 'Earn passive income with crypto.',\r\n  bodyText: 'BriseSwap makes it easy to make your crypto work for you.',\r\n  reverse: true,\r\n  primaryButton: {\r\n    to: '/farms',\r\n    text: 'Explore',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://Bswaptoken.com/',\r\n    text: 'Visit Us',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/earn/',\r\n    attributes: [\r\n  \r\n \r\n    \r\n    ],\r\n  },\r\n}\r\n\r\nexport const cakeSectionData: SalesSectionProps = {\r\n  headingText: 'BSWAP makes our world Fantastic.',\r\n  bodyText:\r\n    'BSWAP token is at the heart of the BriseSwap ecosystem. Buy it, win it, farm it, spend it, stake it... heck, you can even vote with it!',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap?outputCurrency=0xEEa9Fe24FFBc4F338d90695Be5bf9c0964b93e7E',\r\n    text: 'Buy BSWAP',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/tokenomics/cake',\r\n    text: '  ',\r\n    external: false,\r\n  },\r\n\r\n  images: {\r\n    path: '/images/home/cake/',\r\n    attributes: [\r\n     \r\n      \r\n  \r\n\r\n    ],\r\n  },\r\n}\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetStats } from 'hooks/api'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\r\n// eslint-disable-next-line\r\nimport IconCard, { IconCardData } from '../IconCard'\r\n// eslint-disable-next-line\r\nimport StatCardContent from './StatCardContent'\r\n\r\n\r\n// Values fetched from bitQuery effective 6/9/21\r\nconst txCount = 30841921\r\nconst addressCount = 2751624\r\n\r\nconst Stats = () => {\r\n  // eslint-disable-next-line\r\n  const { t } = useTranslation()\r\n  // eslint-disable-next-line\r\n  const data = useGetStats()\r\n  // eslint-disable-next-line\r\n  const { theme } = useTheme()\r\n\r\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\r\n  // eslint-disable-next-line\r\n  const trades = formatLocalisedCompactNumber(txCount)\r\n  // eslint-disable-next-line\r\n  const users = formatLocalisedCompactNumber(addressCount)\r\n\r\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\r\n  // eslint-disable-next-line\r\n  const [entrusting, inFunds] = tvlText.split(tvlString)\r\n// eslint-disable-next-line\r\n  const UsersCardData: IconCardData = {\r\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\r\n  }\r\n// eslint-disable-next-line\r\n  const TradesCardData: IconCardData = {\r\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\r\n  }\r\n// eslint-disable-next-line\r\n  const StakedCardData: IconCardData = {\r\n    icon: <ChartIcon color=\"failure\" width=\"36px\" />,\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      \r\n      <Heading textAlign=\"center\" scale=\"xl\">\r\n        {t('Used by millions.')}\r\n      </Heading>\r\n      <Heading textAlign=\"center\" scale=\"xl\" mb=\"32px\">\r\n        {t('Trusted with billions.')}\r\n      </Heading>\r\n      <Text textAlign=\"center\" color=\"textSubtle\">\r\n        {t('MilkerSwap has the most users of any decentralized platform, ever.')}\r\n      </Text>\r\n      <Flex flexWrap=\"wrap\">\r\n        <Text display=\"inline\" textAlign=\"center\" color=\"textSubtle\" mb=\"20px\">\r\n          {entrusting}\r\n          <>{data ? <>{tvlString}</> : <Skeleton display=\"inline-block\" height={16} width={70} mt=\"2px\" />}</>\r\n          {inFunds}\r\n        </Text>\r\n      </Flex>\r\n\r\n      <Text textAlign=\"center\" color=\"textSubtle\" bold mb=\"32px\">\r\n        {t('Will you join them?')}\r\n      </Text>\r\n\r\n     \r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import { useEffect, useState } from 'react'\r\n\r\n/* eslint-disable camelcase */\r\nexport interface DeBankTvlResponse {\r\n  id: string\r\n  chain: string\r\n  name: string\r\n  site_url: string\r\n  logo_url: string\r\n  has_supported_portfolio: boolean\r\n  tvl: number\r\n}\r\n\r\nexport const useGetStats = () => {\r\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\r\n        const responseData: DeBankTvlResponse = await response.json()\r\n\r\n        setData(responseData)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n","import React from 'react'\r\nimport { Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n}\r\n\r\nconst PurpleWordHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n  return (\r\n    <Heading scale=\"xl\" mb=\"24px\" {...props}>\r\n      <span style={{ color: theme.colors.secondary }}>{firstWord} </span>\r\n      {remainingWords}\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default PurpleWordHeading\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CompositeImage, { CompositeImageProps } from '../CompositeImage'\r\nimport PurpleWordHeading from '../PurpleWordHeading'\r\n\r\ninterface SalesSectionButton {\r\n  to: string\r\n  text: string\r\n  external: boolean\r\n}\r\n\r\nexport interface SalesSectionProps {\r\n  headingText: string\r\n  bodyText: string\r\n  reverse: boolean\r\n  primaryButton: SalesSectionButton\r\n  secondaryButton: SalesSectionButton\r\n  images: CompositeImageProps\r\n}\r\n\r\nconst SalesSection: React.FC<SalesSectionProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { headingText, bodyText, reverse, primaryButton, secondaryButton, images } = props\r\n\r\n  const headingTranslatedText = t(headingText)\r\n  const bodyTranslatedText = t(bodyText)\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex\r\n        flexDirection={['column-reverse', null, null, reverse ? 'row-reverse' : 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          flex=\"1\"\r\n          ml={[null, null, null, reverse && '64px']}\r\n          mr={[null, null, null, !reverse && '64px']}\r\n          alignSelf={['flex-start', null, null, 'center']}\r\n        >\r\n          <PurpleWordHeading text={headingTranslatedText} />\r\n          <Text color=\"textSubtle\" mb=\"24px\">\r\n            {bodyTranslatedText}\r\n          </Text>\r\n          <Flex>\r\n            <Link mr=\"16px\" external={primaryButton.external} href={primaryButton.to}>\r\n              <Button>\r\n                <Text color=\"card\" bold fontSize=\"16px\">\r\n                  {t(primaryButton.text)}\r\n                </Text>\r\n              </Button>\r\n            </Link>\r\n            <Link external={secondaryButton.external} href={secondaryButton.to}>\r\n              {t(secondaryButton.text)}\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n        >\r\n          <CompositeImage {...images} />\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SalesSection\r\n","import React from 'react'\r\nimport { Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n}\r\n\r\nconst RowHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n\r\n  return (\r\n    <Heading {...props}>\r\n      {firstWord}\r\n      <span style={{ color: theme.colors.secondary }}> {remainingWords}</span>\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default RowHeading\r\n","import React, { useState, useRef, useCallback } from 'react'\r\n\r\nimport { Flex, SwapVertIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\n\r\n\r\n\r\nimport RowHeading from './RowHeading'\r\n\r\n\r\nconst FarmsPoolsRow = () => {\r\n  const [showFarms, setShowFarms] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { observerRef } = useIntersectionObserver()\r\n\r\n\r\n\r\n  const timer = useRef<ReturnType<typeof setTimeout>>(null)\r\n\r\n\r\n  const startTimer = useCallback(() => {\r\n    timer.current = setInterval(() => {\r\n      setShowFarms((prev) => !prev)\r\n    }, 6000)\r\n  }, [timer])\r\n\r\n \r\n// eslint-disable-next-line\r\n  const getPoolText = (pool: DeserializedPool) => {\r\n    if (pool.isAutoVault) {\r\n      return t('Auto BSWAP')\r\n    }\r\n\r\n    if (pool.sousId === 0) {\r\n      return t('Manual BSWAP')\r\n    }\r\n\r\n    return t('Stake %stakingSymbol% - Earn %earningSymbol%', {\r\n      earningSymbol: pool.earningToken.symbol,\r\n      stakingSymbol: pool.stakingToken.symbol,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div ref={observerRef}>\r\n      <Flex flexDirection=\"column\" mt=\"24px\">\r\n        <Flex mb=\"24px\">\r\n          <RowHeading text={showFarms ? t('Top Farms') : t(' ')} />\r\n          <IconButton\r\n            variant=\"text\"\r\n            height=\"100%\"\r\n            width=\"auto\"\r\n            onClick={() => {\r\n              setShowFarms((prev) => !prev)\r\n              clearInterval(timer.current)\r\n              startTimer()\r\n            }}\r\n          >\r\n            <SwapVertIcon height=\"24px\" width=\"24px\" color=\"textSubtle\" />\r\n          </IconButton>\r\n        </Flex>\r\n        \r\n      </Flex>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FarmsPoolsRow\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nconst SunburstSvg: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1956 1956\" {...props}>\r\n      <g filter=\"url(#filter0_f)\">\r\n        <path\r\n          d=\"M29 0l31 0c17,0 32,7 43,18 11,11 18,26 18,42 0,4 -1,7 -1,11l-1 1c13,2 25,8 33,17 11,10 18,25 18,42 0,17 -7,32 -18,43 -10,11 -26,17 -42,17l-81 0c-8,0 -15,-3 -21,-8 -5,-5 -8,-12 -8,-20l0 -50 0 -35 0 -49c0,-8 3,-15 8,-21 6,-5 13,-8 21,-8zm16 104l78 0c3,0 5,2 5,5l0 42c0,3 -2,6 -5,6l-78 0c-3,0 -5,-3 -5,-6l0 -42c0,-3 2,-5 5,-5zm15 -76c15,0 27,11 27,26 0,15 -12,26 -27,26 -14,0 -26,-11 -26,-26 0,-15 12,-26 26,-26zm0 -13l-31 0c-4,0 -8,1 -10,4 -3,2 -4,6 -4,10l0 49 0 35 0 50c0,3 1,7 4,9 2,3 6,4 10,4l81 0c12,0 24,-5 32,-13 8,-8 13,-19 13,-32 0,-12 -5,-24 -13,-32 -8,-8 -20,-13 -32,-13l0 0 0 0c-1,0 -2,0 -3,-1 -4,-1 -6,-5 -4,-9 1,-3 1,-5 2,-8 0,-2 1,-5 1,-8 0,-12 -5,-24 -14,-32 -8,-8 -19,-13 -32,-13z\"\r\n          fill=\"url(#paint0_radial)\"\r\n          fillOpacity=\"0.1\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <filter\r\n          id=\"filter0_f\"\r\n          x=\"0\"\r\n          y=\"0\"\r\n          width=\"1956\"\r\n          height=\"1956\"\r\n          filterUnits=\"userSpaceOnUse\"\r\n          colorInterpolationFilters=\"sRGB\"\r\n        >\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"10\" result=\"effect1_foregroundBlur\" />\r\n        </filter>\r\n        <radialGradient\r\n          id=\"paint0_radial\"\r\n          cx=\"0\"\r\n          cy=\"0\"\r\n          r=\"1\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n          gradientTransform=\"translate(978 978) rotate(90) scale(958)\"\r\n        >\r\n          <stop offset=\"0.114547\" stopColor=\"white\" stopOpacity=\"0\" />\r\n          <stop offset=\"0.374975\" stopColor=\"white\" />\r\n          <stop offset=\"1\" stopColor=\"white\" stopOpacity=\"0\" />\r\n        </radialGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default SunburstSvg\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n// eslint-disable-next-line\r\nimport { Flex, Heading, Text, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport Container from 'components/Layout/Container'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport SunburstSvg from './SunburstSvg'\r\n\r\n\r\nconst BgWrapper = styled.div`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst StyledSunburst = styled(SunburstSvg)`\r\n  height: 350%;\r\n  width: 350%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    height: 400%;\r\n    width: 400%;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled(Flex)`\r\n  z-index: 1;\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`\r\n// eslint-disable-next-line\r\nconst FloatingPancakesWrapper = styled(Container)`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  visibility: hidden;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    visibility: visible;\r\n  }\r\n`\r\n// eslint-disable-next-line\r\nconst topLeftImage = {\r\n  path: '/images/',\r\n  attributes: [\r\n    { src: ' ', alt: ' ' },\r\n  ],\r\n}\r\n\r\n// eslint-disable-next-line\r\nconst Footer = () => {\r\n  // eslint-disable-next-line\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\" height=\"100%\">\r\n          <StyledSunburst />\r\n        </Flex>\r\n      </BgWrapper>\r\n      \r\n      <Wrapper>\r\n      \r\n\r\n        \r\n        {!account && <ConnectWalletButton mt=\"24px\" />}\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\r\n  flex-direction: column;\r\n  ${({ noMobileBorder, theme }) =>\r\n    noMobileBorder\r\n      ? `${theme.mediaQueries.md} {\r\n           padding: 0 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         padding: 0 8px;\r\n         ${theme.mediaQueries.sm} {\r\n           padding: 0 16px;\r\n         }\r\n       `}\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px 8px;\r\n  margin-top: 24px;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(4, auto);\r\n  }\r\n`\r\n\r\nconst emissionsPerBlock = 15\r\n\r\nconst CakeDataRow = () => {\r\n  const { t } = useTranslation()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(tokens.cake.address))\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n\r\n\r\n\r\n  return (\r\n    <Grid>\r\n      <Flex flexDirection=\"column\">\r\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\r\n        {cakeSupply ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </Flex>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Burned to date')}</Text>\r\n        {burnedBalance ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={burnedBalance} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Current emissions')}</Text>\r\n\r\n        <Heading scale=\"lg\">{t('%cakeEmissions%/block', { cakeEmissions: emissionsPerBlock })}</Heading>\r\n      </StyledColumn>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CakeDataRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nexport const OuterWedgeWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  right: 0px;\r\n  top: 0px;\r\n`\r\n\r\nexport const InnerWedgeWrapper = styled.div<{ fill: string; top?: boolean; width?: string }>`\r\n  position: absolute;\r\n  display: flex;\r\n  width: 100%;\r\n  ${({ top }) => (top ? 'top: 0px' : 'bottom: 0px')};\r\n\r\n  svg {\r\n    fill: ${({ fill }) => fill};\r\n    width: ${({ width }) => width || '100%'};\r\n    height: 100%;\r\n    max-height: 48px;\r\n  }\r\n`\r\n\r\nexport const WedgeTopLeft: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M1660 48C1139.02 46.1887 336.256 15.2453 0 0H1660V48Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeTopRight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M-346 48C174.985 46.1887 977.744 15.2453 1314 0H-346V48Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeBottomRight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M0 0C520.985 1.81132 1323.74 32.7547 1660 48H0V0Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeBottomLeft: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M1660 0C1139.02 1.81132 336.256 32.7547 0 48H1660V0Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { SerializedFarmConfig } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nexport interface FarmWithBalance extends SerializedFarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\r\n  const [earningsSum, setEarningsSum] = useState<number>(null)\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingBSWAP',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\r\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\r\n        const earningNumber = new BigNumber(earning.balance)\r\n        if (earningNumber.eq(0)) {\r\n          return accum\r\n        }\r\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\r\n      }, 0)\r\n\r\n      setFarmsWithStakedBalance(farmsWithBalances)\r\n      setEarningsSum(totalEarned)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return { farmsWithStakedBalance, earningsSum }\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Flex, Skeleton, Text, Link, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport Balance from 'components/Balance'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { getEarningsText } from './EarningsText'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  height: fit-content;\r\n`\r\n\r\nconst HarvestCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\r\n\r\n  const masterChefContract = useMasterchef()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\r\n  const numTotalToCollect = farmsWithStakedBalance.length\r\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\r\n  const hasCakePoolToCollect = numTotalToCollect - numFarmsToCollect > 0\r\n\r\n  const earningsText = getEarningsText(numFarmsToCollect, hasCakePoolToCollect, earningsBusd, t)\r\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const farmWithBalance of farmsWithStakedBalance) {\r\n      try {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'BSWAP' }),\r\n        )\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    }\r\n    setPendingTx(false)\r\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardBody>\r\n        <Flex flexDirection={['column', null, null, 'row']} justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Flex flexDirection=\"column\" alignItems={['center', null, null, 'flex-start']}>\r\n            {preText && (\r\n              <Text mb=\"4px\" color=\"textSubtle\">\r\n                {preText}\r\n              </Text>\r\n            )}\r\n            {!earningsBusd.isNaN() ? (\r\n              <Balance\r\n                decimals={earningsBusd.gt(0) ? 2 : 0}\r\n                fontSize=\"24px\"\r\n                bold\r\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\r\n                lineHeight=\"1.1\"\r\n                value={earningsBusd.toNumber()}\r\n              />\r\n            ) : (\r\n              <Skeleton width={96} height={24} my=\"2px\" />\r\n            )}\r\n            <Text mb={['16px', null, null, '0']} color=\"textSubtle\">\r\n              {toCollectText}\r\n            </Text>\r\n          </Flex>\r\n          {numTotalToCollect <= 0 ? (\r\n            <Link href=\"farms\">\r\n              <Button width={['100%', null, null, 'auto']} variant=\"secondary\">\r\n                <Text color=\"primary\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <ArrowForwardIcon ml=\"4px\" color=\"primary\" />\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <Button\r\n              width={['100%', null, null, 'auto']}\r\n              id=\"harvest-all\"\r\n              isLoading={pendingTx}\r\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n              disabled={pendingTx}\r\n              onClick={harvestAllFarms}\r\n            >\r\n              <Text color=\"invertedContrast\" bold>\r\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\r\n              </Text>\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default HarvestCard\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const getEarningsText = (\r\n  numFarmsToCollect: number,\r\n  hasCakePoolToCollect: boolean,\r\n  earningsBusd: BigNumber,\r\n  t: ContextApi['t'],\r\n): string => {\r\n  const data = {\r\n    earningsBusd: earningsBusd.toString(),\r\n    count: numFarmsToCollect,\r\n  }\r\n\r\n  let earningsText = t('%earningsBusd% to collect', data)\r\n\r\n  if (numFarmsToCollect > 0 && hasCakePoolToCollect) {\r\n    if (numFarmsToCollect > 1) {\r\n      earningsText = t('%earningsBusd% to collect from %count% farms and BSWAP pool', data)\r\n    } else {\r\n      earningsText = t('%earningsBusd% to collect from %count% farm and BSWAP pool', data)\r\n    }\r\n  } else if (numFarmsToCollect > 0) {\r\n    if (numFarmsToCollect > 1) {\r\n      earningsText = t('%earningsBusd% to collect from %count% farms', data)\r\n    } else {\r\n      earningsText = t('%earningsBusd% to collect from %count% farm', data)\r\n    }\r\n  } else if (hasCakePoolToCollect) {\r\n    earningsText = t('%earningsBusd% to collect from BSWAP pool', data)\r\n  }\r\n\r\n  return earningsText\r\n}\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon, Flex, Heading, Skeleton, Text, Box } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ProfileAvatarWithTeam from 'components/ProfileAvatarWithTeam'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport truncateHash from 'utils/truncateHash'\r\n\r\nconst Desktop = styled(Flex)`\r\n  align-items: center;\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst Mobile = styled(Flex)`\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Sticker = styled(Flex)`\r\n  height: 92px;\r\n  width: 92px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 3px solid ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: ${({ theme }) => theme.radii.circle};\r\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\r\n`\r\n\r\nconst StyledNoProfileAvatarIcon = styled(NoProfileAvatarIcon)`\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst UserDetail = () => {\r\n  const { profile, isLoading } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const truncatedAddress = truncateHash(account)\r\n\r\n  const getDesktopHeading = () => {\r\n    if (profile) {\r\n      return <Heading scale=\"xl\">{t('Hi, %userName%!', { userName: profile.username })}</Heading>\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={200} height={40} my=\"4px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  const getMobileHeading = () => {\r\n    if (profile) {\r\n      return (\r\n        <Heading mb=\"18px\" textAlign=\"center\">\r\n          {t('Hi, %userName%!', { userName: profile.username })}\r\n        </Heading>\r\n      )\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={120} height={20} mt=\"2px\" mb=\"18px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Desktop>\r\n        <Box mr=\"24px\">\r\n          <Sticker>{profile ? <ProfileAvatarWithTeam profile={profile} /> : <StyledNoProfileAvatarIcon />}</Sticker>\r\n        </Box>\r\n        <Flex flexDirection=\"column\">\r\n          {getDesktopHeading()}\r\n          {isLoading || !account ? (\r\n            <Skeleton width={160} height={16} my=\"4px\" />\r\n          ) : (\r\n            <Text fontSize=\"16px\"> {t('Connected with %address%', { address: truncatedAddress })}</Text>\r\n          )}\r\n        </Flex>\r\n      </Desktop>\r\n      <Mobile>{getMobileHeading()}</Mobile>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserDetail\r\n","import React from 'react'\r\nimport { Box, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport HarvestCard from './HarvestCard'\r\nimport UserDetail from './UserDetail'\r\n\r\nconst StyledCard = styled(Box)`\r\n  border-bottom: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-left: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-right: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-radius: ${({ theme }) => `0 0 ${theme.radii.card} ${theme.radii.card}`};\r\n  background: ${({ theme }) =>\r\n    theme.isDark\r\n      ? 'linear-gradient(360deg, rgba(49, 61, 92, 0.9) 0%, rgba(61, 42, 84, 0.9) 100%)'\r\n      : 'linear-gradient(180deg, rgba(202, 194, 236, 0.9) 0%,  rgba(204, 220, 239, 0.9) 51.04%, rgba(206, 236, 243, 0.9) 100%)'};\r\n`\r\n\r\nconst UserBanner = () => {\r\n  return (\r\n    <StyledCard p={['16px', null, null, '24px']}>\r\n      <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection={['column', null, null, 'row']}>\r\n        <Flex flex=\"1\" mr={[null, null, null, '32px']}>\r\n          <UserDetail />\r\n        </Flex>\r\n        <Flex flex=\"1\" width={['100%', null, 'auto']}>\r\n          <HarvestCard />\r\n        </Flex>\r\n      </Flex>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default UserBanner\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Container from 'components/Layout/Container'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport Hero from './components/Hero'\r\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\r\nimport MetricsSection from './components/MetricsSection'\r\nimport SalesSection from './components/SalesSection'\r\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\r\nimport Footer from './components/Footer'\r\nimport CakeDataRow from './components/CakeDataRow'\r\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\r\nimport UserBanner from './components/UserBanner'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 48px;\r\n  }\r\n`\r\n\r\nconst UserBannerWrapper = styled(Container)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\r\n\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledHeroSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'radial-gradient(103.12% 50% at 50% 50%, #21193A 0%, #191326 100%)'\r\n            : 'linear-gradient(139.73deg, #6ed1d5 0%, #F3EFFF 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        {account && (\r\n          <UserBannerWrapper>\r\n            <UserBanner />\r\n          </UserBannerWrapper>\r\n        )}\r\n        <Hero />\r\n      </StyledHeroSection>\r\n      <PageSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #09070C 22%, #201335 100%)'\r\n            : 'linear-gradient(180deg, #FFFFFF 22%, #527dd4 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <MetricsSection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper top fill={theme.isDark ? '#201335' : '#527dd4'}>\r\n            <WedgeTopLeft />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...swapSectionData} />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.gradients.cardHeader}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper width=\"150%\" top fill={theme.colors.background}>\r\n            <WedgeTopRight />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...earnSectionData} />\r\n        <FarmsPoolsRow />\r\n      </PageSection>\r\n    \r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <SalesSection {...cakeSectionData} />\r\n        <CakeDataRow />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background=\"linear-gradient(180deg, #7645D9 0%, #5121B1 100%)\"\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <Footer />\r\n      </PageSection>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatarWithTeam: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatarWithTeam\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n"],"sourceRoot":""}